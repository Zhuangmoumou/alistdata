name: Build glibc 2.27 for ARM64

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GLIBC_VERSION: 2.27
  TARGET: aarch64-linux-gnu
  INSTALL_DIR: ${{ github.workspace }}/glibc-${{ env.GLIBC_VERSION }}-arm64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-$TARGET g++-$TARGET \
          make \
          bison \
          flex \
          gettext \
          texinfo \
          xz-utils \
          zip

    - name: Download glibc source
      run: |
        wget https://ftp.gnu.org/gnu/glibc/glibc-${{ env.GLIBC_VERSION }}.tar.xz
        tar xf glibc-${{ env.GLIBC_VERSION }}.tar.xz

    - name: Create build directory
      run: |
        mkdir -p glibc-build
        mkdir -p ${{ env.INSTALL_DIR }}

    - name: Configure glibc
      working-directory: glibc-build
      run: |
        ../glibc-${{ env.GLIBC_VERSION }}/configure \
          --prefix=/ \
          --host=${{ env.TARGET }} \
          --enable-kernel=3.2.0 \
          --with-headers=/usr/${{ env.TARGET }}/include \
          --disable-multilib \
          --disable-werror

    - name: Build glibc
      working-directory: glibc-build
      run: |
        make -j$(nproc)
        make install DESTDIR=${{ env.INSTALL_DIR }}

    - name: Create zip archive
      run: |
        cd ${{ env.INSTALL_DIR }} && \
        zip -r ../glibc-${{ env.GLIBC_VERSION }}-arm64.zip .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: glibc-${{ env.GLIBC_VERSION }}-arm64
        path: ${{ github.workspace }}/glibc-${{ env.GLIBC_VERSION }}-arm64.zip
